package  ${virginPackage}.client.dto;

import java.util.*;
import java.math.BigDecimal;

#if($isImports)
    #foreach($member  in $imports)
        import ${member};
    #end
#end

public class ${metaData.getRealClassName()}DTO{

	private static final long serialVersionUID = 1L;

	public ${metaData.getRealClassName()}DTO() {
		super();
	}
	
	public ${metaData.getRealClassName()}DTO(${finalParam}) {
	  #if(${metaData.isGetSimpleProperties()})
                #foreach($member2  in ${metaData.getSimpleProperties()})
                  this.${member2.getName()} = ${member2.getName()};
                #end
      #end
      #if(${metaData.isGetManyToOneProperties()})
           #foreach($member  in ${getVariableForManyToOneProperties})
                this.${member} = ${member};
           #end
	  #end
	
	}
	
	#foreach(${member2}  in ${metaData.getProperties()})
		private ${member2.getType().getSimpleName()} ${member2.getName()};
	#end
	
private boolean isFetchOnly;

#foreach(${member2}  in ${metaData.getProperties()})
        public ${member2.getType().getSimpleName()} get${member2.getGetNameOfPrimaryName()}() {
        return ${member2.getName()};
        }
        public void set${member2.getGetNameOfPrimaryName()}(${member2.getType().getSimpleName()} ${member2.getName()}) {
        this.${member2.getName()} = ${member2.getName()};
        }
#end
	public void setFetchOnly(boolean isFetchOnly) {
		this.isFetchOnly = isFetchOnly;
	}

	public boolean isFetchOnly() {
		return isFetchOnly;
	}
}
