package ${virginPackage}.client.entryPoint;

	
import ${virginPackage}.client.dataService.DataService${metaData.getRealClassName()};
import ${virginPackage}.client.dataService.DataService${metaData.getRealClassName()}Async;
import ${virginPackage}.client.smartds.SmartGWTDataSource${metaData.getRealClassName()};
import com.google.gwt.core.client.GWT;
import com.google.gwt.user.client.rpc.ServiceDefTarget;
import com.smartgwt.client.rpc.RPCManager;
import com.smartgwt.client.types.Alignment;
import com.smartgwt.client.types.PromptStyle;
import com.smartgwt.client.widgets.IButton;
import com.smartgwt.client.widgets.events.ClickEvent;
import com.smartgwt.client.widgets.events.ClickHandler;
import com.smartgwt.client.widgets.form.DynamicForm;
import com.smartgwt.client.widgets.grid.ListGrid;
import com.smartgwt.client.widgets.grid.events.RecordClickEvent;
import com.smartgwt.client.widgets.grid.events.RecordClickHandler;
import com.smartgwt.client.widgets.layout.HLayout;
import com.smartgwt.client.widgets.layout.VLayout;

/**
 * Entry point classes define <code>onModuleLoad()</code>.
 */
public class ${metaData.getRealClassName()}EP {

	private DataService${metaData.getRealClassName()}Async dataService${metaData.getRealClassName()} = GWT.create(DataService${metaData.getRealClassName()}.class);
	private IButton buttonSave${metaData.getRealClassName()} = new IButton("Save");
	private IButton buttonClean${metaData.getRealClassName()} = new IButton("Clean");
	private IButton buttonDelete${metaData.getRealClassName()} = new IButton("Delete");
	private ListGrid grid${metaData.getRealClassName()};
    private DynamicForm form${metaData.getRealClassName()};
	
	private static ${metaData.getRealClassName()}EP instance = null;

    private ${metaData.getRealClassName()}EP() {
    }

    public static ${metaData.getRealClassName()}EP getInstance() {
        if (instance == null) {
            instance = new ${metaData.getRealClassName()}EP();
        }

        return instance;
    }
	
	public VLayout build${metaData.getRealClassName()}() {
		RPCManager.setPromptStyle(PromptStyle.CURSOR);
		
		VLayout layout = new VLayout(16);

		ServiceDefTarget endpoint = (ServiceDefTarget) dataService${metaData.getRealClassName()};
		String moduleRelativeURL = GWT.getModuleBaseURL() + "data";
		endpoint.setServiceEntryPoint(moduleRelativeURL);

		buttonSave${metaData.getRealClassName()}.enable();
		buttonDelete${metaData.getRealClassName()}.disable();

		form${metaData.getRealClassName()} = new DynamicForm();
		form${metaData.getRealClassName()}.setDataSource(SmartGWTDataSource${metaData.getRealClassName()}.getInstance());
		form${metaData.getRealClassName()}.setIsGroup(true);
		form${metaData.getRealClassName()}.setGroupTitle("Information ${metaData.getRealClassName()}");
		form${metaData.getRealClassName()}.setNumCols(4);

		grid${metaData.getRealClassName()} = new ListGrid();
		grid${metaData.getRealClassName()}.setDataSource(SmartGWTDataSource${metaData.getRealClassName()}.getInstance());
		grid${metaData.getRealClassName()}.setAutoFetchData(true);
		#set($splitArray = ${metaData.getFinalParamForIdVariables().split(",")})
		#foreach($pk in $splitArray)
			grid${metaData.getRealClassName()}.setSortField("${pk.trim()}");
		#end
		
		grid${metaData.getRealClassName()}.addRecordClickHandler(new RecordClickHandler() {
			public void onRecordClick(RecordClickEvent event) {
				form${metaData.getRealClassName()}.editSelectedData(grid${metaData.getRealClassName()});
				#set($splitArray = ${metaData.getFinalParamForIdVariables().split(",")})
				#foreach($pk in $splitArray)
            		form${metaData.getRealClassName()}.getField("${pk.trim()}").setDisabled(true);
            	#end
				buttonDelete${metaData.getRealClassName()}.enable();
			}
		});

		buttonSave${metaData.getRealClassName()}.addClickHandler(new ClickHandler() {
			public void onClick(ClickEvent event) {
				form${metaData.getRealClassName()}.submit();
				clear${metaData.getRealClassName()}();
			}
		});
		buttonDelete${metaData.getRealClassName()}.addClickHandler(new ClickHandler() {
			public void onClick(ClickEvent event) {
				grid${metaData.getRealClassName()}.removeData(grid${metaData.getRealClassName()}.getSelectedRecord());
				clear${metaData.getRealClassName()}();
			}
		});
		buttonClean${metaData.getRealClassName()}.addClickHandler(new ClickHandler() {
			public void onClick(ClickEvent event) {
				clear${metaData.getRealClassName()}();
			}
		});

		HLayout hLayout = new HLayout(15);
		hLayout.addMember(buttonSave${metaData.getRealClassName()});
		hLayout.addMember(buttonDelete${metaData.getRealClassName()});
		hLayout.addMember(buttonClean${metaData.getRealClassName()});
		hLayout.setHeight("10%");
		hLayout.setAlign(Alignment.CENTER);

		layout.addMember(form${metaData.getRealClassName()});
		layout.addMember(hLayout);
		layout.addMember(grid${metaData.getRealClassName()});
		layout.setAlign(Alignment.CENTER);

		return layout;
	}

	private void clear${metaData.getRealClassName()}() {
		form${metaData.getRealClassName()}.clearValues();
		form${metaData.getRealClassName()}.editNewRecord();
		#set($splitArray = ${metaData.getFinalParamForIdVariables().split(",")})
		#foreach($pk in $splitArray)
			form${metaData.getRealClassName()}.getField("${pk.trim()}").setDisabled(false);
		#end
		buttonSave${metaData.getRealClassName()}.enable();
		buttonDelete${metaData.getRealClassName()}.disable();
	}
}
