<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-reverse-engineering PUBLIC "-//Hibernate/Hibernate Reverse Engineering DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-reverse-engineering-3.0.dtd" >

<hibernate-reverse-engineering>
	<type-mapping>
		<sql-type jdbc-type="NUMERIC" scale="0" hibernate-type="Long">
		</sql-type>
		<sql-type jdbc-type="NUMERIC" hibernate-type="Double">
		</sql-type>		
		<sql-type jdbc-type="DECIMAL" scale="0" hibernate-type="Long">
		</sql-type>
		<sql-type jdbc-type="DECIMAL" hibernate-type="Double">
		</sql-type>			
		<sql-type jdbc-type="TINYINT" hibernate-type="Integer">
		</sql-type>
		<sql-type jdbc-type="SMALLINT" hibernate-type="Integer">
		</sql-type>
		<sql-type jdbc-type="INTEGER" hibernate-type="Integer">
		</sql-type>
		<sql-type jdbc-type="BIGINT" hibernate-type="Long">
		</sql-type>
		<sql-type jdbc-type="REAL" hibernate-type="Float">
		</sql-type>
		<sql-type jdbc-type="FLOAT" hibernate-type="Float">
		</sql-type>
		<sql-type jdbc-type="DOUBLE" hibernate-type="Double">
		</sql-type>
	</type-mapping>
	#if(${isTableList}==true)
		#foreach($table  in ${tablesList})
    	<table-filter match-name="$table" match-schema="${matchSchemaForTables}"></table-filter>
		#end
	#end
</hibernate-reverse-engineering>