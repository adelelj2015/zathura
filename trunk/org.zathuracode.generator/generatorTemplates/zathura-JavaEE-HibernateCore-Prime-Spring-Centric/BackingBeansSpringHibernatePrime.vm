package  ${virginPackage}.presentation.backingBeans;
import java.util.ArrayList;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Set;
import java.util.TimeZone;
import org.primefaces.component.inputtext.InputText;
import org.primefaces.component.calendar.*;
import org.primefaces.component.commandbutton.CommandButton;
import org.primefaces.event.DateSelectEvent;
import org.primefaces.event.RowEditEvent;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;    
import  ${virginPackage}.exceptions.*;
import ${package}.*;
import ${packageOriginal}.dto.${metaData.getRealClassName()}DTO;
import ${virginPackage}.presentation.businessDelegate.*;
import ${virginPackage}.utilities.*;
/**
 * @author Zathura Code Generator http://code.google.com/p/zathura/
 * support Andrés Mauricio Cárdenas mauriciocardenasp@gmail.com
 */
public class ${metaData.getRealClassName()}View {

public ${metaData.getRealClassName()}View() {
super();
}
#foreach($member2  in $finalParamForViewVariablesInList)
    private InputText txt${member2};
#end
#foreach($member2  in $finalParamForIdForViewVariablesInList)
    private InputText txt${member2};
#end
#if(${isFinalParamForViewDatesInList})
    #foreach($member2  in $finalParamForViewDatesInList)
        private Calendar txt${member2};
    #end
#end
#if(${isFinalParamForIdForViewDatesInList})
    #foreach($member2  in $finalParamForIdForViewDatesInList)
        private Calendar txt${member2};
    #end
#end
private CommandButton btnSave;
private CommandButton btnModify;
private CommandButton btnDelete;
private CommandButton btnClear;
private List<${metaData.getRealClassName()}DTO> data;
private ${metaData.getRealClassName()}DTO selected${metaData.getRealClassName()};	
private IBusinessDelegatorView businessDelegatorView;

	      public void rowEventListener(RowEditEvent e){
			try {
			
			${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO = (${metaData.getRealClassName()}DTO) e.getObject(); 
			
			#foreach($member2  in $finalParamForViewVariablesInList)
				#set( $str = $member2 ) 
				#set( $upper = $str.toString().substring(0,1).toUpperCase())
				#set($str2 = $str.toString().substring(1))
				if(txt${upper}${str2} == null){
					txt${upper}${str2} = new InputText ();
				}
				txt${upper}${str2}.setValue(${metaData.getRealClassNameAsVariable()}DTO.get${upper}${str2}());
				#end
			#foreach($member2  in $finalParamForIdForViewVariablesInList)
				#set( $str = $member2 ) 
				#set( $upper = $str.toString().substring(0,1).toUpperCase())
				#set($str2 = $str.toString().substring(1))
				if(txt${upper}${str2} == null){
					txt${upper}${str2} = new InputText ();
				}
				txt${upper}${str2}.setValue(${metaData.getRealClassNameAsVariable()}DTO.get${upper}${str2}());
			#end
			#if(${isFinalParamForViewDatesInList})
				#foreach($member2  in $finalParamForViewDatesInList)
				#set( $str = $member2 ) 
				#set( $upper = $str.toString().substring(0,1).toUpperCase())
				#set($str2 = $str.toString().substring(1))
				if(txt${upper}${str2} == null){
					txt${upper}${str2} = new Calendar ();
				}
				txt${upper}${str2}.setValue(${metaData.getRealClassNameAsVariable()}DTO.get${upper}${str2}());
				#end
			#end
			
			#if(${isFinalParamForIdForViewDatesInList})
				#foreach($member2  in $finalParamForIdForViewDatesInList)
				#set( $str = $member2 ) 
				#set( $upper = $str.toString().substring(0,1).toUpperCase())
				#set($str2 = $str.toString().substring(1))
				if(txt${upper}${str2} == null){
					txt${upper}${str2} = new Calendar ();
				}
				txt${upper}${str2}.setValue(${metaData.getRealClassNameAsVariable()}DTO.get${upper}${str2}());
				#end
			#end	
				
			action_modify();
			
			}catch (Exception ex) {
			
			}
		
		}



		public String action_clear() {
        #foreach($member2  in $finalParamForViewVariablesInList)
            if(txt${member2} != null){
			 txt${member2}.setValue(null);
             txt${member2}.setDisabled(true);
			}
        #end
        #if(${isFinalParamForViewDatesInList})
            #foreach($member2  in $finalParamForViewDatesInList)
                if(txt${member2} != null){
				  txt${member2}.setValue(null);
                  txt${member2}.setDisabled(true);
				}
            #end
        #end
        #foreach($member2  in $finalParamForIdForViewVariablesInList)
			    if(txt${member2} != null){
				   txt${member2}.setValue(null);
				   txt${member2}.setDisabled(false);	
				}
        #end
        #if(${isFinalParamForIdForViewDatesInList})
            #foreach($member2  in $finalParamForIdForViewDatesInList)
                if(txt${member2} != null){
				   txt${member2}.setValue(null);
                   txt${member2}.setDisabled(false);
				}
            #end
        #end
        if(btnSave != null){
		  btnSave.setDisabled(true);
		}
		
		if(btnDelete != null){
		   btnDelete.setDisabled(true);
		}
		
		if(btnModify != null){
			btnModify.setDisabled(true);
		}
        
		if(btnClear != null){
		  btnClear.setDisabled(false);
		}
			
        return "";
        }

		## evento generado para cada variable id que sea date para que actualize el growl
		#if(${isFinalParamForIdForViewDatesInList})
		 #foreach($member2  in $finalParamForIdForViewDatesInList)
		  public void listener_txt${member2}(DateSelectEvent dse){
			Date inputDate = (Date)txt${member2}.getValue();
			DateFormat dateFormat= new SimpleDateFormat("dd/MM/yyyy");
			FacesContext.getCurrentInstance().addMessage("", new FacesMessage("Fecha Seleccionada " +dateFormat.format(dse.getDate())));
		  }
		 #end	
		#end
		##evento generado para cada variable  date para que actualize el growl
		#if(${isFinalParamForViewDatesInList})
			#foreach($member2  in $finalParamForViewDatesInList)
			public void listener_txt${member2}(DateSelectEvent dse){
			Date inputDate = (Date)txt${member2}.getValue();
			DateFormat dateFormat= new SimpleDateFormat("dd/MM/yyyy");
			FacesContext.getCurrentInstance().addMessage("", new FacesMessage("Fecha Seleccionada " +dateFormat.format(dse.getDate())));
			}
			#end
		#end		
		
		public void listener_txtId(){
        
        ${metaData.getRealClassName()} entity = null;
        try {
        #foreach($member2  in $finalParamForIdForViewClass)
            $member2
        #end
        entity = businessDelegatorView.get${metaData.getRealClassName()}(${metaData.primaryKey.getName()});
        } catch (Exception e) {
        // TODO: handle exception
        }
        
		if(entity==null){
        #foreach($member2  in $finalParamForViewVariablesInList)
            txt${member2}.setDisabled(false);
        #end
        #if(${isFinalParamForViewDatesInList})
            #foreach($member2  in $finalParamForViewDatesInList)
                txt${member2}.setDisabled(false);
            #end
        #end
        #foreach($member2  in $finalParamForIdForViewVariablesInList)
            txt${member2}.setDisabled(false);
        #end
        #if(${isFinalParamForIdForViewDatesInList})
            #foreach($member2  in $finalParamForIdForViewDatesInList)
                txt${member2}.setDisabled(false);
            #end
        #end
        btnSave.setDisabled(false);
        btnDelete.setDisabled(true);
        btnModify.setDisabled(true);
        btnClear.setDisabled(false);
        }else{
        #foreach($member2  in $finalParamForViewForSetsVariablesInList)
            ${member2}
        #end
        #foreach($member2  in $finalParamForIdForViewForSetsVariablesInList)
            ${member2}
        #end
        btnSave.setDisabled(true);
        btnDelete.setDisabled(false);
        btnModify.setDisabled(false);
        btnClear.setDisabled(false);
        }
        }
        
		
		
		
        public String action_save() {
        try {
        businessDelegatorView.save${metaData.getRealClassName()}(${finalParamForView});
        FacesUtils.addInfoMessage(ZMessManager.ENTITY_SUCCESFULLYSAVED);
		action_clear();
        } catch (Exception e) {
        FacesUtils.addErrorMessage(e.getMessage());
        }
        return "";
        }
		
		
		
        public String action_delete() {
        try {
        businessDelegatorView.delete${metaData.getRealClassName()}($finalParamForIdClassAsVariablesAsString);
        FacesUtils.addInfoMessage(ZMessManager.ENTITY_SUCCESFULLYDELETED);
		action_clear();
        } catch (Exception e) {
		FacesUtils.addErrorMessage(e.getMessage());
        }
        return "";
        }
		
		
		
        public String action_modify() {
        try {
        businessDelegatorView.update${metaData.getRealClassName()}(${finalParamForView});
		FacesUtils.addInfoMessage(ZMessManager.ENTITY_SUCCESFULLYMODIFIED);
		action_clear();
        } catch (Exception e) {
		   data=null;
           FacesUtils.addErrorMessage(e.getMessage());
        }
        return "";
        }
		
		
		## Action to modify DataTableEditable
		
		public String actionDeleteDataTableEditable(){
			
			try{
			  #foreach($member2  in $finalParamForIdForViewVariablesInList)
				#set( $str = $member2 ) 
				#set( $upper = $str.toString().substring(0,1).toUpperCase())
				#set($str2 = $str.toString().substring(1))
				if(txt${upper}${str2} == null){
					txt${upper}${str2} = new InputText ();
				}
				txt${upper}${str2}.setValue(selected${metaData.getRealClassName()}.get${upper}${str2}());
			#end
			
			#if(${isFinalParamForIdForViewDatesInList})
				#foreach($member2  in $finalParamForIdForViewDatesInList)
				#set( $str = $member2 ) 
				#set( $upper = $str.toString().substring(0,1).toUpperCase())
				#set($str2 = $str.toString().substring(1))
				if(txt${upper}${str2} == null){
					txt${upper}${str2} = new Calendar ();
				}
				txt${upper}${str2}.setValue(selected${metaData.getRealClassName()}.get${upper}${str2}());
				#end
			#end
				action_delete();
				data.remove(selected${metaData.getRealClassName()});
			
			}catch(Exception e ){
			 FacesUtils.addErrorMessage(e.getMessage());
			}  
			
			return "";
		}
		
        public String action_modifyWitDTO(${finalParam}) throws Exception {
        try {
        businessDelegatorView.update${metaData.getRealClassName()}(${finalParamForDtoUpdateOnlyVariables});
		FacesUtils.addInfoMessage(ZMessManager.ENTITY_SUCCESFULLYMODIFIED);
        } catch (Exception e) {
        //renderManager.getOnDemandRenderer("${metaData.getRealClassName()}View").requestRender();
        FacesUtils.addErrorMessage(e.getMessage());
        throw e;
        }
        return "";
        }
								
									
 ##}
                                         
                                            #foreach($member2  in $finalParamForViewVariablesInList)
                                                public InputText getTxt${member2}() {
                                                return txt${member2};
                                                }
                                                public void setTxt${member2}(InputText txt${member2}) {
                                                this.txt${member2} = txt${member2};
                                                }
                                            #end
                                            #if(${isFinalParamForViewDatesInList})
                                                #foreach($member2  in $finalParamForViewDatesInList)
                                                    public Calendar getTxt${member2}() {
                                                    return txt${member2};
                                                    }
                                                    public void setTxt${member2}(Calendar txt${member2}) {
                                                    this.txt${member2} = txt${member2};
                                                    }
                                                #end
                                            #end
                                            #foreach($member2  in $finalParamForIdForViewVariablesInList)
                                                public InputText getTxt${member2}() {
                                                return txt${member2};
                                                }
                                                public void setTxt${member2}(InputText txt${member2}) {
                                                this.txt${member2} = txt${member2};
                                                }
                                            #end
                                            #if(${isFinalParamForIdForViewDatesInList})
                                                #foreach($member2  in $finalParamForIdForViewDatesInList)
                                                    public Calendar getTxt${member2}() {
                                                    return txt${member2};
                                                    }
                                                    public void setTxt${member2}(Calendar txt${member2}) {
                                                    this.txt${member2} = txt${member2};
                                                    }
                                                #end
											#end
											
											## get data to DataTable and DataTableEditable
											public List<${metaData.getRealClassName()}DTO> getData() {
												try{
													if(data==null){
													data = businessDelegatorView.getData${metaData.getRealClassName()}();
													}	
												
												}catch(Exception e){
												 e.printStackTrace();
												}
												return data;
											}
											## set data to DataTable and DataTableEditable
											public void setData(List<${metaData.getRealClassName()}DTO> ${metaData.getRealClassNameAsVariable()}DTO){
												this.data=${metaData.getRealClassNameAsVariable()}DTO;
											}
											
											## get to SelectedObj to DataTableEditable
											
											public ${metaData.getRealClassName()}DTO getSelected${metaData.getRealClassName()}(){
												return selected${metaData.getRealClassName()};
											}
											
											public void setSelected${metaData.getRealClassName()} (${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()} ){
												this.selected${metaData.getRealClassName()} = ${metaData.getRealClassNameAsVariable()};
											}
											
											
                                            public CommandButton getBtnSave() {
                                            return btnSave;
                                            }
                                            public void setBtnSave(CommandButton btnSave) {
                                            this.btnSave = btnSave;
                                            }
                                            public CommandButton getBtnModify() {
                                            return btnModify;
                                            }
                                            public void setBtnModify(CommandButton btnModify) {
                                            this.btnModify = btnModify;
                                            }
                                            public CommandButton getBtnDelete() {
                                            return btnDelete;
                                            }
                                            public void setBtnDelete(CommandButton btnDelete) {
                                            this.btnDelete = btnDelete;
                                            }
                                            public CommandButton getBtnClear() {
                                            return btnClear;
                                            }
                                            public void setBtnClear(CommandButton btnClear) {
                                            this.btnClear = btnClear;
                                            }
                                            
                                            public TimeZone getTimeZone() {
                                             return java.util.TimeZone.getDefault();
                                             }
																							
											 public IBusinessDelegatorView getBusinessDelegatorView() {
											 return businessDelegatorView;
											 }

											public void setBusinessDelegatorView(IBusinessDelegatorView businessDelegatorView) {
											this.businessDelegatorView = businessDelegatorView;
											} 
                                             
									}
