package ${virginPackage}.server.dataservice;

import java.util.ArrayList;
import java.util.List;

import ${virginPackage}.client.dataservice.DataService${metaData.getRealClassName()};
import ${virginPackage}.client.dto.${metaData.getRealClassName()}DTO;
import ${packageOriginal}.${metaData.getRealClassName()};
import ${virginPackage}.server.businessdelegate.BusinessDelegatorView;
#if($isImports)
    #foreach($member  in $imports)
        import ${member};
    #end
#end
import com.google.gwt.user.server.rpc.RemoteServiceServlet;

public class DataService${metaData.getRealClassName()}Impl extends RemoteServiceServlet implements DataService${metaData.getRealClassName()} {

	public List<${metaData.getRealClassName()}DTO> fetch(int startRow,int finalRow) throws Exception{
		List<${metaData.getRealClassName()}DTO> fetchData = null;
			fetchData = toDTOList(BusinessDelegatorView.findPage${metaData.getRealClassName()}(null, true, startRow, 75));
		return fetchData;
	}
	
	public ${metaData.getRealClassName()}DTO fetch(${finalParamForId}) throws Exception{
		${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO = null;
			#if(${metaData.getPrimaryKey().isPrimiaryKeyAComposeKey()})
                #foreach($idString  in $finalParamForIdClass)
                    $idString
				#end
				${metaData.getRealClassNameAsVariable()}DTO = toDTO(BusinessDelegatorView.get${metaData.getRealClassName()}(${metaData.getPrimaryKey().getName()}Class));
			#else
				${metaData.getRealClassNameAsVariable()}DTO = toDTO(BusinessDelegatorView.get${metaData.getRealClassName()}(${metaData.getPrimaryKey().getName()}));
			#end
		return ${metaData.getRealClassNameAsVariable()}DTO;
	}

	public ${metaData.getRealClassName()}DTO add(${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO) throws Exception {
		${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()};
		
		#foreach($member2  in ${finalMembers})
                ${member2.getType().getSimpleName()} ${member2.getName()} = ${metaData.getRealClassNameAsVariable()}DTO.get${member2.getGetNameOfPrimaryName()}();
           #end
		
		
		BusinessDelegatorView.save${metaData.getRealClassName()}(		
		#set( $count = 0 )
		#foreach(${members}  in ${finalMembers})
			#set( $count = $count + 1 )
			#if( $count < ${finalMembers.size()})
				${members.getName()},
			#else
				${members.getName()}
			#end
        #end);
		
		#if(${metaData.getPrimaryKey().isPrimiaryKeyAComposeKey()})
                #foreach($idString  in $finalParamForIdClass)
                    $idString
				#end
				${metaData.getRealClassNameAsVariable()} = toDTO(BusinessDelegatorView.get${metaData.getRealClassName()}(${metaData.primaryKey.getName()}Class	));
		#else
				${metaData.getRealClassNameAsVariable()} = toDTO(BusinessDelegatorView.get${metaData.getRealClassName()}(${metaData.primaryKey.getName()}));
				
		#end
		
		
		
		return ${metaData.getRealClassNameAsVariable()};
	}

	public ${metaData.getRealClassName()}DTO update(${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO)throws Exception {
	
	
	${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()};
		
		#foreach($member2  in ${finalMembers})
                ${member2.getType().getSimpleName()} ${member2.getName()} = ${metaData.getRealClassNameAsVariable()}DTO.get${member2.getGetNameOfPrimaryName()}();
           #end
		
		
		BusinessDelegatorView.update${metaData.getRealClassName()}(		
		#set( $count = 0 )
		#foreach(${members}  in ${finalMembers})
			#set( $count = $count + 1 )
			#if( $count < ${finalMembers.size()})
				${members.getName()},
			#else
				${members.getName()}
			#end
        #end);
		
		#if(${metaData.getPrimaryKey().isPrimiaryKeyAComposeKey()})
                #foreach($idString  in $finalParamForIdClass)
                    $idString
				#end
				${metaData.getRealClassNameAsVariable()} = toDTO(BusinessDelegatorView.get${metaData.getRealClassName()}(${metaData.primaryKey.getName()}Class	));
		#else
				${metaData.getRealClassNameAsVariable()} = toDTO(BusinessDelegatorView.get${metaData.getRealClassName()}(${metaData.primaryKey.getName()}));
				
		#end
	
		return ${metaData.getRealClassNameAsVariable()};	
	}

	public void remove(${metaData.getRealClassName()}DTO ${metaData.getRealClassNameAsVariable()}DTO) throws Exception{
				#foreach($member2  in ${finalMemberForId})
					${member2.getType().getSimpleName()} ${member2.getName()} = ${metaData.getRealClassNameAsVariable()}DTO.get${member2.getGetNameOfPrimaryName()}();
				#end
				
				BusinessDelegatorView.delete${metaData.getRealClassName()}(${finalParamForIdVariables});
	}

	
	public ${metaData.getRealClassName()} to${metaData.getRealClassName()}(${metaData.getRealClassName()}DTO dto) throws Exception{
		${metaData.getRealClassName()} entity  = new ${metaData.getRealClassName()}();
		
		#foreach($member2  in ${finalMembers})
                ${member2.getType().getSimpleName()} ${member2.getName()} = dto.get${member2.getGetNameOfPrimaryName()}();
           #end
		
            #if(${metaData.isGetManyToOneProperties()})
                #foreach($member  in $getStringsToEntityForManyToOneProperties)
                    $member
                #end
                
			#end
			
            #if(${metaData.getPrimaryKey().isPrimiaryKeyAComposeKey()})
                #foreach($idString  in $finalParamForIdClass)
                    $idString
                #end
			#end
			
            #if(${metaData.isGetSimpleProperties()})
                #foreach($member2  in ${metaData.getSimpleProperties()})
                    #if(${member2.getRealClassName()}==${metaData.getPrimaryKey().getRealClassName()})
                        #if(${metaData.getPrimaryKey().isPrimiaryKeyAComposeKey()})
                            entity.set${member2.getGetNameOfPrimaryName()}(${member2.getName()}Class);
                            #else
                                entity.set${member2.getGetNameOfPrimaryName()}(${member2.getName()});
                        #end
                        #else
                            entity.set${member2.getGetNameOfPrimaryName()}(${member2.getName()});
                    #end
                #end
            #end
            #if(${metaData.isGetManyToOneProperties()})
                #foreach($member  in ${metaData.getManyToOneProperties()})
                    entity.set${member.getGetNameOfPrimaryName()}(${member.getName()}Class);
                #end
			#end
			
		
		return entity;
	}
	private ArrayList<${metaData.getRealClassName()}DTO> toDTOList(List<${metaData.getRealClassName()}> ${metaData.getRealClassName()}s) {
		ArrayList<${metaData.getRealClassName()}DTO> dtos = new ArrayList<${metaData.getRealClassName()}DTO>();
		for (${metaData.getRealClassName()} ${metaData.getRealClassNameAsVariable()} : ${metaData.getRealClassName()}s) {
			dtos.add(toDTO(${metaData.getRealClassNameAsVariable()}));
		}
		return dtos;
	}
	public ${metaData.getRealClassName()}DTO toDTO(${metaData.getRealClassName()} ${metaData.getRealClassNameAsVariable()}) {
		if (${metaData.getRealClassNameAsVariable()} == null) {
			return null;
		}
		#foreach($member2  in ${finalMembers})
                ${member2.getType().getSimpleName()} ${member2.getName()};
        #end
		
		#foreach($member2  in $finalParamForIdForDtoForSetsVariablesInListGWT)
			${member2}
		#end
		#foreach($member2  in $finalParamForDtoForSetsVariablesInListGWT)
        ${member2}
		#end
		
		${metaData.getRealClassName()}DTO dto = new ${metaData.getRealClassName()}DTO();
		
		#foreach($member2  in ${finalMembers})
                dto.set${member2.getGetNameOfPrimaryName()}(${member2.getName()});
		#end
		
		return dto;
	
	}
	public Long totalRows() throws Exception {
		return BusinessDelegatorView.findTotalNumber${metaData.getRealClassName()}();
	}
}
